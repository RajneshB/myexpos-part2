alias userSP R0;
userSP=SP;
alias syscallno R1;
syscallno=[[PTBR+((userSP-5)/512)*2]*512+(userSP-5)%512];
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13]=SP;

SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512-1;
alias currID R2;
currID=[SYSTEM_STATUS_TABLE+1];
[PROCESS_TABLE+currID*16+9]=syscallno;

//wait syscall

if(syscallno==13) then

    alias argID R3;
    argID=[[PTBR+((userSP-4)/512)*2]*512+(userSP-4)%512];
    if(argID<0 || argID>=16 || [PROCESS_TABLE+argID*16+4]==TERMINATED) then
        [[PTBR+((userSP-1)/512)*2]*512+(userSP-1)%512]=-1;
        [PROCESS_TABLE+currID*16+9]=0;
        SP=userSP;
        ireturn;
    endif;
    [PROCESS_TABLE+currID*16+4]=WAIT_PROCESS;
    [PROCESS_TABLE+currID*16+5]=argID;

    multipush(R0,R1,R2,R3);
    call MOD_5;
    multipop(R0,R1,R2,R3);
    [PROCESS_TABLE+currID*16+9]=0;

    [[PTBR+((userSP-1)/512)*2]*512+(userSP-1)%512]=0;
    SP=userSP;
    ireturn;


endif;

//signal syscall
if(syscallno==14) then
    alias i R4;
    i=0;
    while(i<16) do
        if([PROCESS_TABLE+i*16+4]==WAIT_PROCESS && [PROCESS_TABLE+i*16+5]==currID) then
            [PROCESS_TABLE+i*16+4]=READY;
        endif;
        i=i+1;
    endwhile;
    [PROCESS_TABLE+currID*16+9]=0;

    [[PTBR+((userSP-1)/512)*2]*512+(userSP-1)%512]=0;
    SP=userSP;
    ireturn;
endif;
//GETPID
if(syscallno==11) then
    [PROCESS_TABLE+currID*16+9]=0;

    [[PTBR+((userSP-1)/512)*2]*512+(userSP-1)%512]=currID;
    SP=userSP;
    ireturn;
endif;

//GETPPID
if(syscallno==12) then
    [PROCESS_TABLE+currID*16+9]=0;

    [[PTBR+((userSP-1)/512)*2]*512+(userSP-1)%512]=[PROCESS_TABLE+currID*16+2];
    SP=userSP;
    ireturn;
endif;




