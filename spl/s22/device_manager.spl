//breakpoint;
alias fun_num R1;
alias curr_id R2;
if(fun_num==3) then
    multipush(R0,R1,R2,R3);
    R1=8;
    R2=curr_id;
    call MOD_0;
    multipop(R0,R1,R2,R3);
    print R3;
    multipush(R0,R1,R2,R3);
    R1=9;
    R2=curr_id;
    call MOD_0;
    R10=R0;
    multipop(R0,R1,R2,R3);
endif;
if(fun_num==4) then
    multipush(R0,R1,R2,R3);
    R1=8;
    R2=curr_id;
    call MOD_0;
    multipop(R0,R1,R2,R3);
    
    read;
    
    
    [PROCESS_TABLE+(curr_id*16)+4]=WAIT_TERMINAL;
    multipush(R0,R1,R2,R3);
    call SCHEDULER;
    multipop(R0,R1,R2,R3);
    
    [[PTBR + 2 * ((R3)/512)] * 512 + (R3)%512]=[PROCESS_TABLE +curr_id*16+ 8];

endif;
//diskload
if(fun_num==2) then
    multipush(R1,R2,R3,R4);
    R1=3;
    R2=curr_id;
    call MOD_0;
    multipop(R1,R2,R3,R4);
    [DISK_STATUS_TABLE]=1;
    [DISK_STATUS_TABLE+1]=0;
    [DISK_STATUS_TABLE+2]=R3;
    [DISK_STATUS_TABLE+3]=R4;
    [DISK_STATUS_TABLE+4]=curr_id;
    load(R3,R4);
    [PROCESS_TABLE+curr_id*16+4]=WAIT_DISK;
    multipush(R1,R2,R3,R4);
    call MOD_5;
    multipop(R1,R2,R3,R4);


endif;
return;
    