//breakpoint;

//idle 
loadi(69,11);

//boot module
loadi(54,67);
loadi(55,68);




//idle process page table setup 

SP=76*512 -1;

multipush(R1,R2);
call BOOT_MODULE;
multipop(R1,R2);

PTBR=PAGE_TABLE_BASE;  //as PID of idle process is 0
PTLR=10;



//Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 70;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

[PROCESS_TABLE  + 11]=76;
[PROCESS_TABLE + 1]=0;
[PROCESS_TABLE +12]=0;
[PROCESS_TABLE+14]=PTBR;
[PROCESS_TABLE+15]=PTLR;
[PROCESS_TABLE+ 4]=RUNNING;
[PROCESS_TABLE+13]=8*512;


[70*512]=[69*512 +1];


PTBR=PAGE_TABLE_BASE+SWAPPER_DAEMON*20;  //as PID of idle process is 0
PTLR=10;



//Library
[PTBR+0] = -1;
[PTBR+1] = "0000";
[PTBR+2] = -1;
[PTBR+3] = "0000";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";

[PROCESS_TABLE  + 16*SWAPPER_DAEMON+11]=82;
[81*512]=[69*512 +1];
[PROCESS_TABLE + 16*SWAPPER_DAEMON+1]=0;
[PROCESS_TABLE +16*SWAPPER_DAEMON+12]=0;
[PROCESS_TABLE+16*SWAPPER_DAEMON+14]=PTBR;
[PROCESS_TABLE+16*SWAPPER_DAEMON+15]=PTLR;
[PROCESS_TABLE+16*SWAPPER_DAEMON+ 4]=CREATED;
[PROCESS_TABLE+16*SWAPPER_DAEMON+13]=8*512;

//idle page table setup complete

PTBR=PAGE_TABLE_BASE;
PTLR=10;

[SYSTEM_STATUS_TABLE +1]=0;
SP=8*512;

ireturn;



