alias fun_num R1;

//swap out
if(fun_num==1) then
    alias currID R2;
    alias i R3;
    alias flag R4;
    flag=1;
    i=3;
    while(flag && (i<MAX_PROC_NUM-1)) do
        if([PROCESS_TABLE+i*16+4]==WAIT_PROCESS && [PROCESS_TABLE+i*16+6]==0) then
            break;
        endif;
        i=i+1;
    endwhile;
    if(i==MAX_PROC_NUM-1) then    
        i=3;
    else
        flag=0;
    endif;
    while(flag && (i<MAX_PROC_NUM-1)) do
        if([PROCESS_TABLE+i*16+4]==WAIT_SEMAPHORE && [PROCESS_TABLE+i*16+6]==0) then
            break;
        endif;
        i=i+1;
    endwhile;
    if(i==MAX_PROC_NUM-1) then    
        i=3;
    else
        flag=0;
    endif;
    alias maxtickproc R5;
    maxtickproc=-1;
    alias  maxtick R6;
    maxtick=-1;
    while(flag && (i<MAX_PROC_NUM-1)) do
        if([PROCESS_TABLE+i*16+4]!=RUNNING || [PROCESS_TABLE+i*16+4]!=TERMINATED || [PROCESS_TABLE+i*16+4]!=ALLOCATED || [PROCESS_TABLE+i*16+6]!=1) then
            if([PROCESS_TABLE+i*16]>maxtick) then
                maxtick=[PROCESS_TABLE+i*16];
                maxtickproc=i;
            endif;
        endif;
        i=i+1;
    endwhile;
    if(maxtickproc==-1 && i==MAX_PROC_NUM-1) then
        [SYSTEM_STATUS_TABLE+5]=0;
        return;
    endif;
    if(i==MAX_PROC_NUM-1) then
        i=maxtickproc;
    endif;
    [PROCESS_TABLE+i*16]=0;
    alias iter R7;
    alias pagetable R8;
    pagetable=[PROCESS_TABLE+i*16+14];

    iter=4;
    while(iter<20) do    
        if([pagetable+iter]!=-1) then
            if(iter<8 ||iter >15) then
                if([MEMORY_FREE_LIST+[pagetable+iter]]==1) then
                    multipush(R1,R2,R3,R4,R5,R6,R7,R8);
                    R1=6;
                    call MOD_2;
                    multipop(R1,R2,R3,R4,R5,R6,R7,R8);
                    alias swapblock R0;
                    [DISK_MAP_TABLE +i*10+ iter/2]=swapblock;
                    multipush(R1,R2,R3,R4,R5,R6,R7,R8);
                    R1=1;
                    R2=SWAPPER_DAEMON;
                    R3=[pagetable+iter];
                    // print R0;
                    R4=swapblock;
                    call MOD_4;
                    multipop(R1,R2,R3,R4,R5,R6,R7,R8);
                endif;
            endif;
            if(((iter<8 ||iter >15) && [MEMORY_FREE_LIST+[pagetable+iter]]==1) || (iter>=8 && iter<15)) then

                multipush(R1,R2,R3,R4,R5,R6,R7,R8);
                R1=2;
                R2=[pagetable+iter];
                call MOD_2;
                multipop(R1,R2,R3,R4,R5,R6,R7,R8);
                [pagetable+iter]=-1;
                [pagetable+iter+1]="0000";
            endif;
            
        endif;
        iter=iter+2;
    endwhile;
    [PROCESS_TABLE+i*16+6]=1;
    [SYSTEM_STATUS_TABLE+4]=[SYSTEM_STATUS_TABLE+4]+1;
    [SYSTEM_STATUS_TABLE+5]=0;

    return;
endif;

//swapin

if(fun_num==2) then
    alias currID R2;
    alias i R3;
    i=3;
    alias maxtick R4;
    maxtick=-1;
    alias Pid R5;
    Pid=-1;
    while(i<MAX_PROC_NUM-1) do  
        if([PROCESS_TABLE+i*16+4]==READY && [PROCESS_TABLE+i*16+6]==1 &&[PROCESS_TABLE+i*16]>maxtick) then
            Pid=i;
            maxtick=[PROCESS_TABLE+i*16];
        endif;
        i=i+1;
    endwhile;
    if(Pid==-1) then
        [SYSTEM_STATUS_TABLE+5]=0;
        return;
    endif;
    [PROCESS_TABLE+Pid*16]=0;
    i=2;
    while(i<10) do
        if((i<4 || i>=8) && [DISK_MAP_TABLE+Pid*10+i]!=-1) then
            multipush(R1,R2,R3,R4,R5);
                R1=1;
                call MOD_2;
            multipop(R1,R2,R3,R4,R5);
            [[PROCESS_TABLE+Pid*16+14]+i*2]=R0;
            [[PROCESS_TABLE+Pid*16+14]+i*2+1]="0110";
            // print "hi";
                    // print "hi";

            multipush(R1,R2,R3,R4,R5);
            R1=2;
            R2=SWAPPER_DAEMON;
            R4=[DISK_MAP_TABLE+Pid*10+i];
            R3=R0;
            call MOD_4;
            multipop(R1,R2,R3,R4,R5);
            // print "bye";
            multipush(R1,R2,R3,R4,R5);
            R1=4;
            R2=[DISK_MAP_TABLE+Pid*10+i];

            R3=SWAPPER_DAEMON;
            call MOD_2;
            multipop(R1,R2,R3,R4,R5);
            // print "hello";
            [DISK_MAP_TABLE+Pid*10+i]=-1;
        endif;
            i=i+1;
    endwhile;
    [PROCESS_TABLE+Pid*16+6]=0;
    [SYSTEM_STATUS_TABLE+4]=[SYSTEM_STATUS_TABLE+4]-1;
    [SYSTEM_STATUS_TABLE+5]=0;

    return;
endif;





            






