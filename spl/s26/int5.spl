alias userSP R1;
alias syscall R2;
alias currID R3;
currID=[SYSTEM_STATUS_TABLE+1];
userSP=SP;
[PROCESS_TABLE+currID*16+13]=SP;
syscall=[[PTBR+(userSP-5)/512*2]*512+(userSP-5)%512];
alias retval R10;
retval=[PTBR+(userSP-1)/512*2]*512+(userSP-1)%512;
alias mode R11;
    alias userarea R12;
    userarea=[PROCESS_TABLE+currID*16+11];
alias resource R13;
resource=userarea*512+RESOURCE_TABLE_OFFSET;
mode=PROCESS_TABLE+currID*16+9;
[mode]=syscall;
SP=[mode+2]*512-1;

//open
if(syscall==2) then
    alias filename R4;
    filename=[[PTBR+(userSP-4)/512*2]*512+(userSP-4)%512];

    alias i R6;
    i=0;
    while(i<8) do
        if([resource+2*i]==-1) then
            break;
        endif;
        i=i+1;
    endwhile;
    if(i==8) then
        [retval]=-3;
        SP=userSP;
        [mode]=0;
        ireturn;
    endif;
    multipush(R1,R2,R3,R4,R6,R10,R11,R12,R13);
    R1=3;
    R2=filename;
    call MOD_3;
    multipop(R1,R2,R3,R4,R6,R10,R11,R12,R13);
    if(R0<0) then
        [retval]=R0;
        [mode]=0;
        SP=userSP;
        ireturn;
    endif;
    [resource+2*i]=0;
    [resource+2*i+1]=R0;
    [mode]=0;
    SP=userSP;
    [retval]=i;
    ireturn;
endif;
if(syscall==3) then
    alias i R4;
    i=[[PTBR+(userSP-4)/512*2]*512+(userSP-4)%512];
    if(i<0 || i>7) then
        [retval]=-1;
        [mode]=0;
        SP=userSP;
        ireturn;
    endif;
    if([resource+2*i]==-1 || [resource+2*i]==SEMAPHORE) then
        [retval]=-1;
        [mode]=0;
        SP=userSP;
        ireturn;
    endif;  
    alias ofli R5;
    ofli=[resource+2*i+1];
    multipush(R1,R2,R3,R4,R5,R10,R11,R12,R13);
    R1=4;
    R2=ofli;
    call MOD_3;
    multipop(R1,R2,R3,R4,R5,R10,R11,R12,R13);
    [resource+2*i]=-1;
    [mode]=0;
    SP=userSP;
    [retval]=0;
    ireturn;
endif;

//seek
if(syscall==6) then
    alias i R4;
    i=[[PTBR+(userSP-4)/512*2]*512+(userSP-4)%512];
    if(i<0 || i>7) then
        [retval]=-1;
        [mode]=0;
        SP=userSP;
        ireturn;
    endif;
    if([resource+2*i]!=FILE) then
        [retval]=-1;
        [mode]=0;
        SP=userSP;
        ireturn;
    endif;
    alias ofti R5;
    ofti=[resource+2*i+1];
    alias inodei R6;
    inodei=[OPEN_FILE_TABLE+ofti*4];
     multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13);

            R1=4;
            R2=inodei;
            R3=[SYSTEM_STATUS_TABLE+1];
            call MOD_0;
           multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13);

        if(R0==-1) then
            [retval] = -1;
            SP = userSP;
            [mode] = 0;
            ireturn;
        endif;
        alias lseek R7;
        lseek=[OPEN_FILE_TABLE+ofti*4+2];
        alias offset R8;
        offset=[[PTBR+(userSP-3)/512*2]*512+(userSP-3)%512];
        alias filesize R9;
        if(inodei==INODE_ROOT) then
                filesize=480;
        else
                filesize=[INODE_TABLE + 16*inodei + 2];
        endif;
        if(lseek+offset<0) then
            multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13);

            R1=5;
            R2=inodei;
            R3=[SYSTEM_STATUS_TABLE+1];
            call MOD_0;
          multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13);

            [retval] = -2;
            SP = userSP;
            [mode] = 0;
            ireturn;
        endif;
        if(offset==0) then
            [OPEN_FILE_TABLE+ofti*4+2]=0;
        else 
            if((lseek+offset)>filesize) then
                [OPEN_FILE_TABLE+ofti*4+2]=filesize;
            else 
                [OPEN_FILE_TABLE+ofti*4+2]=lseek+offset;
            endif;

        endif;
            multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13);

            R1=5;
            R2=inodei;
            R3=[SYSTEM_STATUS_TABLE+1];
            call MOD_0;
           multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R12,R13);

            [retval] = 0;
            SP = userSP;
            [mode] = 0;
            ireturn;
endif;