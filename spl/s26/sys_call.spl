

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 5;
alias userSP R1;
userSP = SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE+1]*16 + 13]=SP;
SP=[PROCESS_TABLE +[SYSTEM_STATUS_TABLE+1]*16 + 11]*512-1;
alias physicalPageNum R2;
alias offset R3;
alias fileDescPhysicalAddr R4;
physicalPageNum = [PTBR + 2 * ((userSP - 4)/ 512)];
offset = (userSP - 4) % 512;
fileDescPhysicalAddr = (physicalPageNum * 512) + offset;
alias fileDescriptor R5;
fileDescriptor=[fileDescPhysicalAddr];
        alias word R14;
        word = [[PTBR + 2 * ((userSP - 3) / 512)] * 512 + ((userSP - 3) % 512)];
    alias physicalAddrRetVal R6;
    physicalAddrRetVal = ([PTBR + 2 * (userSP - 1)/ 512] * 512) + ((userSP - 1) % 512);
if (fileDescriptor == -2) then
        multipush(R0, R1, R2, R3,R6); 
        R1=3;
        R2=[SYSTEM_STATUS_TABLE+1];
        R3=word;
        call MOD_4;
        multipop(R0,R1,R2,R3,R6);
        [physicalAddrRetVal] = 0;
else
    if(fileDescriptor<0 && fileDescriptor>7) then
        [physicalAddrRetVal] = -1;
    else
        alias resource R7;
        resource=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+11]*512 + RESOURCE_TABLE_OFFSET;
        if([resource+fileDescriptor*2]!=FILE) then
            [physicalAddrRetVal] = -1;
            SP = userSP;
            [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
            ireturn;
        endif;
        alias ofti R8;
        ofti=[resource+fileDescriptor*2+1];
        alias i R9;
        i=[OPEN_FILE_TABLE+ofti*4];
        if([INODE_TABLE+i*16+4]==0) then //permission is exclusive
            if([INODE_TABLE+i*16+3]!=1 && [INODE_TABLE+i*16+3]!=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+3]) then //owner is not the root nor curr user
                [physicalAddrRetVal] = -3;
                SP = userSP;
                [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
                ireturn;
            endif;
        endif;
        multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R14);
            R1=4;
            R2=i;
            R3=[SYSTEM_STATUS_TABLE+1];
            call MOD_0;
        multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R14);
        if(R0==-1) then
            [physicalAddrRetVal] = -1;
            SP = userSP;
            [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
            ireturn;
        endif;
        alias lseek R10;
        lseek=[OPEN_FILE_TABLE+ofti*4+2];
        if(lseek==2048) then
            multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R14);
            R1=5;
            R2=i;
            R3=[SYSTEM_STATUS_TABLE+1];
            call MOD_0;
            multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R14);
            [physicalAddrRetVal] = -2;
            SP = userSP;
            [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
            ireturn;
        endif;
        if(lseek%512==0 && lseek==[INODE_TABLE+i*16+2]) then
            multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R14);
            R1=3;

            call MOD_2;
            multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R14);
            if(R0==-1) then
                multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R14);
                R1=5;
                R2=i;
                R3=[SYSTEM_STATUS_TABLE+1];
                call MOD_0;
                multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R14);
                [physicalAddrRetVal] = -2;
                SP = userSP;
                [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
                ireturn;
            endif;
            [INODE_TABLE+i*16+lseek/512+8]=R0;

        endif;
        
            alias block R11;
            alias offsetval R13;
            block=lseek/512;
            offsetval=lseek%512;
            multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R13,R14);
            R1 = 1;
            R2 = [INODE_TABLE + 16*i + 8 + block ]; 
            R3 = offsetval;                                       
            R4 = word;                                               
            
            call MOD_3;
            multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,R13,R14);
            if(lseek==[INODE_TABLE+i*16+2]) then
                [INODE_TABLE+i*16+2]=[INODE_TABLE+i*16+2]+1;
                [ROOT_FILE+i*8+1]=[ROOT_FILE+i*8+1]+1;
            endif;
            [OPEN_FILE_TABLE+ofti*4+2]=[OPEN_FILE_TABLE+ofti*4+2]+1;
            multipush(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R14);
            R1=5;
            R2=i;
            R3=[SYSTEM_STATUS_TABLE+1];
            call MOD_0;
            multipop(R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R14);
            [physicalAddrRetVal] = 0;






    endif;
    

endif;
SP = userSP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
ireturn;